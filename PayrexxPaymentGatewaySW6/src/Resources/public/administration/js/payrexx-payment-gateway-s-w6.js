!function(){var e={648:function(e,t,n){var s={"./icons-payrexx-p-color.svg":357,"./icons-payrexx-p-grey.svg":889,"./icons-payrexx-p-white.svg":751};function a(e){return n(i(e))}function i(e){if(!n.o(s,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return s[e]}a.keys=function(){return Object.keys(s)},a.resolve=i,e.exports=a,a.id=648},28:function(){},487:function(){},357:function(e){e.exports='<svg xmlns="http://www.w3.org/2000/svg" width="93.0455mm" height="93.0455mm" viewBox="0 0 263.751 263.751"><title>payrexx_p-color</title><path d="M131.8756,15.9016A115.9744,115.9744,0,0,0,63.9083,225.8464V62.0188H86.5308V76.5462a67.6079,67.6079,0,0,1,47.1319-18.9727c39.5883,0,69.7526,32.8551,69.7526,73.2544,0,39.8562-30.1643,72.1755-69.7526,72.1755a68.1563,68.1563,0,0,1-47.1319-18.675V238.647A115.9857,115.9857,0,1,0,131.8756,15.9016Z" style="fill:#00aff0"></path><path d="M180.5247,130.8279c0-28.8177-21.008-52.2464-46.862-52.2464-25.5838,0-46.5918,23.4287-46.5918,52.2464,0,28.277,21.008,51.17,46.5918,51.17C159.5167,181.9979,180.5247,159.1049,180.5247,130.8279Z" style="fill:#00aff0"></path></svg>'},889:function(e){e.exports='<svg xmlns="http://www.w3.org/2000/svg" width="93.0455mm" height="93.0455mm" viewBox="0 0 263.751 263.751"><title>payrexx_p-grey</title><path d="M131.8756,15.9016A115.9744,115.9744,0,0,0,63.9083,225.8464V62.0188H86.5308V76.5462a67.6079,67.6079,0,0,1,47.1319-18.9727c39.5883,0,69.7526,32.8551,69.7526,73.2544,0,39.8562-30.1643,72.1755-69.7526,72.1755a68.1563,68.1563,0,0,1-47.1319-18.675V238.647A115.9857,115.9857,0,1,0,131.8756,15.9016Z" style="fill:#706f6f"></path><path d="M180.5247,130.8279c0-28.8177-21.008-52.2464-46.862-52.2464-25.5838,0-46.5918,23.4287-46.5918,52.2464,0,28.277,21.008,51.17,46.5918,51.17C159.5167,181.9979,180.5247,159.1049,180.5247,130.8279Z" style="fill:#706f6f"></path></svg>'},751:function(e){e.exports='<svg xmlns="http://www.w3.org/2000/svg" width="93.0455mm" height="93.0455mm" viewBox="0 0 263.751 263.751"><title>payrexx_p-white</title><path d="M131.8756,15.9016A115.9744,115.9744,0,0,0,63.9083,225.8464V62.0188H86.5308V76.5462a67.6079,67.6079,0,0,1,47.1319-18.9727c39.5883,0,69.7526,32.8551,69.7526,73.2544,0,39.8562-30.1643,72.1755-69.7526,72.1755a68.1563,68.1563,0,0,1-47.1319-18.675V238.647A115.9857,115.9857,0,1,0,131.8756,15.9016Z" style="fill:#fff"></path><path d="M180.5247,130.8279c0-28.8177-21.008-52.2464-46.862-52.2464-25.5838,0-46.5918,23.4287-46.5918,52.2464,0,28.277,21.008,51.17,46.5918,51.17C159.5167,181.9979,180.5247,159.1049,180.5247,130.8279Z" style="fill:#fff"></path></svg>'},898:function(){let{Application:e}=Shopware,t=Shopware.Classes.ApiService;class n extends t{constructor(e,t,n="payrexx_payment"){super(e,t,n)}validateApiCredentials(e){let n=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/validate-api-credentials`,{credentials:e},{headers:n}).then(e=>t.handleResponse(e))}}e.addServiceProvider("PayrexxPaymentSettingsService",t=>new n(e.getContainer("init").httpClient,t.loginService))},505:function(e,t,n){var s=n(28);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.id,s,""]]),s.locals&&(e.exports=s.locals),(0,n(534).A)("14b334b4",s,!0,{})},630:function(e,t,n){var s=n(487);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.id,s,""]]),s.locals&&(e.exports=s.locals),(0,n(534).A)("a67aaf5c",s,!0,{})},534:function(e,t,n){"use strict";function s(e,t){for(var n=[],s={},a=0;a<t.length;a++){var i=t[a],r=i[0],o={id:e+":"+a,css:i[1],media:i[2],sourceMap:i[3]};s[r]?s[r].parts.push(o):n.push(s[r]={id:r,parts:[o]})}return n}n.d(t,{A:function(){return y}});var a,i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},o=i&&(document.head||document.getElementsByTagName("head")[0]),l=null,c=0,p=!1,m=function(){},d=null,g="data-vue-ssr-id",u="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function y(e,t,n,a){p=n,d=a||{};var i=s(e,t);return h(i),function(t){for(var n=[],a=0;a<i.length;a++){var o=r[i[a].id];o.refs--,n.push(o)}t?h(i=s(e,t)):i=[];for(var a=0;a<n.length;a++){var o=n[a];if(0===o.refs){for(var l=0;l<o.parts.length;l++)o.parts[l]();delete r[o.id]}}}}function h(e){for(var t=0;t<e.length;t++){var n=e[t],s=r[n.id];if(s){s.refs++;for(var a=0;a<s.parts.length;a++)s.parts[a](n.parts[a]);for(;a<n.parts.length;a++)s.parts.push(f(n.parts[a]));s.parts.length>n.parts.length&&(s.parts.length=n.parts.length)}else{for(var i=[],a=0;a<n.parts.length;a++)i.push(f(n.parts[a]));r[n.id]={id:n.id,refs:1,parts:i}}}}function x(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function f(e){var t,n,s=document.querySelector("style["+g+'~="'+e.id+'"]');if(s){if(p)return m;s.parentNode.removeChild(s)}if(u){var a=c++;t=v.bind(null,s=l||(l=x()),a,!1),n=v.bind(null,s,a,!0)}else t=S.bind(null,s=x()),n=function(){s.parentNode.removeChild(s)};return t(e),function(s){s?(s.css!==e.css||s.media!==e.media||s.sourceMap!==e.sourceMap)&&t(e=s):n()}}var w=(a=[],function(e,t){return a[e]=t,a.filter(Boolean).join("\n")});function v(e,t,n,s){var a=n?"":s.css;if(e.styleSheet)e.styleSheet.cssText=w(t,a);else{var i=document.createTextNode(a),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(i,r[t]):e.appendChild(i)}}function S(e,t){var n=t.css,s=t.media,a=t.sourceMap;if(s&&e.setAttribute("media",s),d.ssrId&&e.setAttribute(g,t.id),a&&(n+="\n/*# sourceURL="+a.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(s){var a=t[s];if(void 0!==a)return a.exports;var i=t[s]={id:s,exports:{}};return e[s](i,i.exports,n),i.exports}n.d=function(e,t){for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="bundles/payrexxpaymentgatewaysw6/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/payrexxpaymentgatewaysw6/"),function(){"use strict";let{Component:e}=Shopware;e.register("payrexx-payment-settings-icon",{template:'{% block payrexx_payment_settings_icon %}\n    <sw-icon name="payrexx-p-color" multicolor></sw-icon>\n{% endblock %}\n'}),n(505);let{Component:t}=Shopware;t.override("sw-settings-index",{template:'{% block sw_settings_content_card_slot_plugins %}\n    {% parent %}\n\n    <sw-settings-item :label="$tc(\'payrexx-payment.module.title\')"\n                      :to="{ name: \'payrexx.payment.index\' }"\n                      :backgroundEnabled="false">\n        <template #icon>\n            <img class="sw-settings-index__payrexx-icon" :src="\'payrexxpaymentgatewaysw6/administration/plugin.png\' | asset" :alt="Payrexx">\n        </template>\n    </sw-settings-item>\n{% endblock %}\n'}),n(630);let{Component:s,Mixin:a}=Shopware;s.register("payrexx-settings",{template:'{% block payrexx_payment_settings %}\n<sw-page class="payrexx-payment">\n    {% block payrexx_payment_settings_header %}\n    <template slot="smart-bar-header">\n        <h2>\n            {{ $tc(\'sw-settings.index.title\') }}\n            <sw-icon name="small-arrow-medium-right" small></sw-icon>\n            {{ $tc(\'payrexx-payment.settingsForm.title\') }}\n        </h2>\n    </template>\n    {% endblock %}\n    {% block payrexx_payment_actions %}\n    <template #smart-bar-actions>\n        {% block payrexx_payment_settings_actions_feedback %}\n        <sw-button\n            @click="isSupportModalOpen = true"\n            :disabled="false"\n            variant="ghost"\n            :square="false"\n            :block="false"\n            :isLoading="false">\n            {{ $tc(\'payrexx-payment.supportModal.supportButton\') }}\n        </sw-button>\n        {% endblock %}\n        {% block payrexx_payment_settings_actions_test %}\n        <sw-button-process @click="onTest"\n                           :isLoading="isTesting"\n                           :processSuccess="isTestSuccessful"\n                           :disabled="credentialsMissing || isLoading">\n            {{ $tc(\'payrexx-payment.settingsForm.test\') }}\n        </sw-button-process>\n        {% endblock %}\n\n\n        {% block payrexx_payment_settings_actions_save %}\n        <sw-button-process\n            class="payrexx_payment_settings_actions__save-action"\n            :isLoading="isLoading"\n            :processSuccess="isSaveSuccessful"\n            :disabled="isLoading || isTesting"\n            variant="primary"\n            @process-finish="saveFinish"\n            @click="onSave">\n            {{ $tc(\'payrexx-payment.settingsForm.save\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n    {% block payrexx_payment_settings_content %}\n    <template #content>\n        <sw-modal\n            v-if="isSupportModalOpen"\n            @modal-close="isSupportModalOpen = false"\n            :title="$tc(\'payrexx-payment.supportModal.title\')"\n            class="payrexx-support sw-modal--medium">\n            <sw-container columns="1fr 1fr">\n                <div class="payrexx-support__col">\n                    <div class="payrexx-support__icon">\n                        <sw-icon name="default-documentation-file" large="true"></sw-icon>\n                    </div>\n                    <p class="payrexx-support__desc">\n                        {{ $tc(\'payrexx-payment.supportModal.manualDesc\') }}\n                    </p>\n                    <sw-button\n                        :disabled="false"\n                        variant="primary"\n                        :square="false"\n                        :block="false"\n                        :isLoading="false"\n                        link="https://help.payrexx.com/integration/e-commerce/shopware-6">\n                        {{ $tc(\'payrexx-payment.supportModal.manualButton\') }}\n                    </sw-button>\n                </div>\n                <div class="payrexx-support__col">\n                    <div class="payrexx-support__icon">\n                        <sw-icon name="default-device-headset" large="true"></sw-icon>\n                    </div>\n                    <p class="payrexx-support__desc">\n                        {{ $tc(\'payrexx-payment.supportModal.supportDesc\') }}\n                    </p>\n                    <sw-button\n                        :disabled="false"\n                        variant="primary"\n                        :square="false"\n                        :block="false"\n                        :isLoading="false"\n                        link="mailto:support+shopware@payrexx.com">\n                        {{ $tc(\'payrexx-payment.supportModal.supportButton\') }}\n                    </sw-button>\n                </div>\n            </sw-container>\n        </sw-modal>\n\n        <sw-card-view>\n            <sw-system-config\n                ref="systemConfig"\n                sales-channel-switchable\n                inherit\n                @config-changed="onConfigChange"\n                domain="PayrexxPaymentGatewaySW6.settings">\n            </sw-system-config>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',mixins:[a.getByName("notification"),a.getByName("sw-inline-snippet")],inject:["PayrexxPaymentSettingsService"],data(){return{config:{},isLoading:!1,isTesting:!1,isSaveSuccessful:!1,isTestSuccessful:!1,instanceNameFilled:!1,apiKeyFilled:!1,showValidationErrors:!1,isSupportModalOpen:!1}},computed:{credentialsMissing:function(){return!this.instanceNameFilled||!this.apiKeyFilled}},methods:{saveFinish(){this.isSaveSuccessful=!1},onSave(){if(this.isLoading=!0,this.credentialsMissing){this.showValidationErrors=!0,this.isLoading=!1;return}this.isSaveSuccessful=!1,this.$refs.systemConfig.saveAll().then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0}).catch(()=>{this.isLoading=!1})},onTest(){this.isTesting=!0,this.isTestSuccessful=!1;let e={instanceName:this.getConfigValue("instanceName"),apiKey:this.getConfigValue("apiKey"),platform:this.getConfigValue("platform")};this.PayrexxPaymentSettingsService.validateApiCredentials(e).then(e=>{let t=e.credentialsValid;e.error,t?(this.createNotificationSuccess({title:this.$tc("payrexx-payment.settingsForm.messages.titleSuccess"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestSuccess")}),this.isTestSuccessful=!0):this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.messages.titleError"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestError")}),this.isTesting=!1}).catch(e=>{this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.messages.titleError"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestErrorGeneral")}),this.isTesting=!1})},onConfigChange(e){this.config=e,this.checkCredentialsFilled(),this.showValidationErrors=!1,this.$root.$emit("payrexx-config-change",e)},getBind(e,t){return t!==this.config&&this.onConfigChange(t),this.showValidationErrors&&("PayrexxPaymentGatewaySW6.settings.instanceName"!==e.name||this.instanceNameFilled||(e.config.error={code:1,detail:this.$tc("payrexx-payment.settingsForm.messages.messageNotBlank")}),"PayrexxPaymentGatewaySW6.settings.apiKey"!==e.name||this.apiKeyFilled||(e.config.error={code:1,detail:this.$tc("payrexx-payment.settingsForm.messages.messageNotBlank")})),e},checkCredentialsFilled(){this.instanceNameFilled=!!this.getConfigValue("instanceName"),this.apiKeyFilled=!!this.getConfigValue("apiKey")},getConfigValue(e){let t=this.$refs.systemConfig.actualConfigData.null;return null===this.$refs.systemConfig.currentSalesChannelId?this.config[`PayrexxPaymentGatewaySW6.settings.${e}`]:this.config[`PayrexxPaymentGatewaySW6.settings.${e}`]||t[`PayrexxPaymentGatewaySW6.settings.${e}`]}}});var i=JSON.parse('{"payrexx-payment":{"module":{"title":"Payrexx Payments","description":"Payrexx Payments"},"settingsForm":{"title":"Payrexx Payments","test":"Teste den API-Zugang","save":"Speichern","messages":{"messageNotBlank":"Dieses Feld darf nicht leer sein.","titleSuccess":"Erfolg","titleError":"Fehler","messageTestSuccess":"Die API-Zugangsdaten sind korrekt.","messageTestError":"Die API-Zugangsdaten sind falsch.","messageTestErrorGeneral":"Die API-Zugangsdaten konnten nicht verifiziert werden.","messageSaveSuccess":"Die Plugin-Einstellungen wurden gespeichert.","messageSaveError":"Die Plugin-Einstellungen konnten nicht gespeichert werden."},"connectButton":{"text":{"connect":"Mit {platform} verbinden","select":"W\xe4hle eine Platform aus"},"messages":{"noPlatform":{"title":"Plattform fehlt","message":"Bitte w\xe4hle eine Plattform aus"},"cancelled":{"title":"Abgebrochen","message":"Verbinden abgebrochen. Es wurden keine Einstellungen gespeichert"},"success":{"title":"Erfolg","message":"API Key and Instanz wurden erfolgreich importiert"},"error":{"title":"Fehler beim Speichern","message":"Konfiguration konnte nicht gespeichert werden: {message}"}}}},"supportModal":{"supportButton":"Support","title":"Wie k\xf6nnen wir Ihnen helfen?","supportDesc":"Kontaktieren Sie unser Support-Team","manualButton":"Dokumentation","manualDesc":"Lesen Sie unsere Integrations Anleitung"}}}'),r=JSON.parse('{"payrexx-payment":{"module":{"title":"Payrexx Payments","description":"Payrexx Payments"},"settingsForm":{"title":"Payrexx Payments","test":"Teste den API-Zugang","save":"Speichern","messages":{"messageNotBlank":"Dieses Feld darf nicht leer sein.","titleSuccess":"Erfolg","titleError":"Fehler","messageTestSuccess":"Die API-Zugangsdaten sind korrekt.","messageTestError":"Die API-Zugangsdaten sind falsch.","messageTestErrorGeneral":"Die API-Zugangsdaten konnten nicht verifiziert werden.","messageSaveSuccess":"Die Plugin-Einstellungen wurden gespeichert.","messageSaveError":"Die Plugin-Einstellungen konnten nicht gespeichert werden."},"connectButton":{"text":{"connect":"Mit {platform} verbinden","select":"W\xe4hle eine Platform aus"},"messages":{"noPlatform":{"title":"Plattform fehlt","message":"Bitte w\xe4hle eine Plattform aus"},"cancelled":{"title":"Abgebrochen","message":"Verbinden abgebrochen. Es wurden keine Einstellungen gespeichert"},"success":{"title":"Erfolg","message":"API Key and Instanz wurden erfolgreich importiert"},"error":{"title":"Fehler beim Speichern","message":"Konfiguration konnte nicht gespeichert werden: {message}"}}}},"supportModal":{"supportButton":"Support","title":"Wie k\xf6nnen wir Ihnen helfen?","supportDesc":"Kontaktieren Sie unser Support-Team","manualButton":"Dokumentation","manualDesc":"Lesen Sie unsere Integrations Anleitung"}}}'),o=JSON.parse('{"payrexx-payment":{"module":{"title":"Payrexx Payments","description":"Payrexx Payments"},"settingsForm":{"title":"Payrexx Payments","test":"Test API-Credentials","save":"Save","messages":{"messageNotBlank":"This Field must not be empty.","titleSuccess":"Success","titleError":"Error","messageTestSuccess":"The API credentials are correct.","messageTestError":"The API credentials are wrong.","messageTestErrorGeneral":"The API-Credentials could not be verified.","messageSaveSuccess":"The plugin settings have been saved.","messageSaveError":"The plugin settings could not be saved."},"connectButton":{"text":{"connect":"Mit {platform} verbinden","select":"W\xe4hle eine Platform aus"},"messages":{"noPlatform":{"title":"No platform selected","message":"Please select a platform before connecting"},"cancelled":{"title":"Cancelled","message":"Connecting attempt cancelled"},"success":{"title":"Success","message":"API Key and Instance have been updated successfully"},"error":{"title":"Error Saving","message":"Failed to save configuration: {message}"}}}},"supportModal":{"supportButton":"Support","title":"How Can We Help You?","supportDesc":"Contact our support team","manualButton":"Manual","manualDesc":"Read our integration manual"}}}');let{Module:l}=Shopware;l.register("payrexx-payment",{type:"plugin",name:"PayrexxPayment",title:"payrexx-payment.module.title",description:"payrexx-payment.module.description",version:"1.0.0",targetVersion:"1.0.0",icon:"regular-cog",snippets:{"de-DE":i,"de-CH":r,"en-GB":o},routes:{index:{component:"payrexx-settings",path:"index",meta:{parentPath:"sw.settings.index"}}},settingsItem:{name:"payrexx-payment-settings",group:"plugins",to:"payrexx.payment.index",icon:"regular-credit-card",backgroundEnabled:!0}}),n(898);var c=(()=>{let e=n(648);return e.keys().reduce((t,n)=>{let s=n.split(".")[1].split("/")[1];return t.push({name:s,functional:!0,render(t,s){let a=s.data;return t("span",{class:[a.staticClass,a.class],style:a.style,attrs:a.attrs,on:a.on,domProps:{innerHTML:e(n)}})}}),t},[])})();let{Component:p}=Shopware;c.map(e=>p.register(e.name,e));let{Component:m,Mixin:d}=Shopware;m.register("platform-connect-button",{template:'{% block platform_connect_button %}\n    <div class="sw-field my-custom-button-component">\n        <sw-button\n                variant="primary"\n                :disabled="isLoading || !isEnabled"\n                @click="onButtonClick">\n            {% block platform_connect_button_text %}\n                <template v-if="platform">\n                    {{ $tc(\'payrexx-payment.settingsForm.connectButton.text.connect\', {platform: platform}) }}\n                </template>\n                <template v-else>\n                    {{ $tc(\'payrexx-payment.settingsForm.connectButton.text.select\') }}\n                </template>\n            {% endblock %}\n        </sw-button>\n    </div>\n{% endblock %}',mixins:[d.getByName("notification")],data(){return{isLoading:!1,isEnabled:!1,platform:""}},created(){try{Shopware.Service("systemConfigApiService").getValues("PayrexxPaymentGatewaySW6.settings").then(e=>{e&&e["PayrexxPaymentGatewaySW6.settings.platform"]?(this.platform=e["PayrexxPaymentGatewaySW6.settings.platform"],this.isEnabled=!0):this.isEnabled=!1})}catch(e){this.isEnabled=!1}window.addEventListener("message",this.handleMessage),this.$root.$on("payrexx-config-change",e=>{e["PayrexxPaymentGatewaySW6.settings.platform"]&&(this.platform=e["PayrexxPaymentGatewaySW6.settings.platform"],this.isEnabled=!0)})},beforeDestroy(){window.removeEventListener("message",this.handleMessage)},methods:{async onButtonClick(){this.isLoading=!0,await this.createPopupWindow()},async createPopupWindow(){let e;let t=void 0!==window.screenLeft?window.screenLeft:window.screenX,n=void 0!==window.screenTop?window.screenTop:window.screenY,s=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:screen.width,a=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:screen.height,i=`width=900,height=900,top=${n+(a-900)/2},left=${t+(s-900)/2},resizable=no,scrollbars=yes`;if(!this.platform){let e=Shopware.Service("systemConfigApiService"),t=await e.getValues("PayrexxPaymentGatewaySW6.settings");this.platform=t["PayrexxPaymentGatewaySW6.settings.platform"]}if(!this.platform){this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.connectButton.messages.noPlatform.title"),message:this.$tc("payrexx-payment.settingsForm.connectButton.messages.noPlatform.message")});return}let r=`https://login.${this.platform}?action=connect&plugin_id=24`,o=window.open(r,"Connect Payrexx",i);e=setInterval(()=>{o.closed&&(o=null,this.isLoading&&this.createNotificationWarning({title:this.$tc("payrexx-payment.settingsForm.connectButton.messages.cancelled.title"),message:this.$tc("payrexx-payment.settingsForm.connectButton.messages.cancelled.message")}),this.isLoading=!1,clearInterval(e))},500)},handleMessage(e){if(this.isLoading=!1,!e.data||!e.data.instance)return;let t=e.data;try{this.storePayload(t.instance),this.setFieldValues(t.instance),this.createNotificationSuccess({title:this.$tc("payrexx-payment.settingsForm.connectButton.messages.success.title"),message:this.$tc("payrexx-payment.settingsForm.connectButton.messages.success.message")})}catch(e){this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.connectButton.messages.error.title"),message:this.$tc("payrexx-payment.settingsForm.connectButton.messages.error.message",{message:e.message})})}},storePayload(e){Shopware.Service("systemConfigApiService").saveValues({"PayrexxPaymentGatewaySW6.settings.apiKey":e.apikey,"PayrexxPaymentGatewaySW6.settings.instanceName":e.name,"PayrexxPaymentGatewaySW6.settings.platform":this.platform})},setFieldValues(e){let t=document.getElementById("PayrexxPaymentGatewaySW6.settings.instanceName");t&&(t.value=e.name);let n=document.getElementById("PayrexxPaymentGatewaySW6.settings.apiKey");n&&(n.value=e.apikey)}}})}()}();