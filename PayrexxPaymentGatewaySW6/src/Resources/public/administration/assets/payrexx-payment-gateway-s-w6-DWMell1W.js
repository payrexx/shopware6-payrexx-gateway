const y='{% block payrexx_payment_settings_icon %} <sw-icon name="payrexx-p-color" multicolor></sw-icon> {% endblock %}',{Component:h}=Shopware;h.register("payrexx-payment-settings-icon",{template:y});const x=`{% block sw_settings_content_card_slot_plugins %} {% parent %} <sw-settings-item :label="$tc('payrexx-payment.module.title')" :to="{ name: 'payrexx.payment.index' }" :backgroundEnabled="false"> <template #icon> <img class="sw-settings-index__payrexx-icon" :src="'payrexxpaymentgatewaysw6/administration/plugin.png' | asset" :alt="Payrexx"> </template> </sw-settings-item> {% endblock %}`,{Component:f}=Shopware;f.override("sw-settings-index",{template:x});const w=`{% block payrexx_payment_settings %} <sw-page class="payrexx-payment"> {% block payrexx_payment_settings_header %} <template slot="smart-bar-header"> <h2> {{ $tc('sw-settings.index.title') }} <sw-icon name="small-arrow-medium-right" small></sw-icon> {{ $tc('payrexx-payment.settingsForm.title') }} </h2> </template> {% endblock %} {% block payrexx_payment_actions %} <template #smart-bar-actions> {% block payrexx_payment_settings_actions_feedback %} <sw-button @click="isSupportModalOpen = true" :disabled="false" variant="ghost" :square="false" :block="false" :isLoading="false"> {{ $tc('payrexx-payment.supportModal.supportButton') }} </sw-button> {% endblock %} {% block payrexx_payment_settings_actions_test %} <sw-button-process @click="onTest" :isLoading="isTesting" :processSuccess="isTestSuccessful" :disabled="credentialsMissing || isLoading"> {{ $tc('payrexx-payment.settingsForm.test') }} </sw-button-process> {% endblock %} {% block payrexx_payment_settings_actions_save %} <sw-button-process class="payrexx_payment_settings_actions__save-action" :isLoading="isLoading" :processSuccess="isSaveSuccessful" :disabled="isLoading || isTesting" variant="primary" @process-finish="saveFinish" @click="onSave"> {{ $tc('payrexx-payment.settingsForm.save') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block payrexx_payment_settings_content %} <template #content> <sw-modal v-if="isSupportModalOpen" @modal-close="isSupportModalOpen = false" :title="$tc('payrexx-payment.supportModal.title')" class="payrexx-support sw-modal--medium"> <sw-container columns="1fr 1fr"> <div class="payrexx-support__col"> <div class="payrexx-support__icon"> <sw-icon name="default-documentation-file" large="true"></sw-icon> </div> <p class="payrexx-support__desc"> {{ $tc('payrexx-payment.supportModal.manualDesc') }} </p> <sw-button :disabled="false" variant="primary" :square="false" :block="false" :isLoading="false" link="https://help.payrexx.com/integration/e-commerce/shopware-6"> {{ $tc('payrexx-payment.supportModal.manualButton') }} </sw-button> </div> <div class="payrexx-support__col"> <div class="payrexx-support__icon"> <sw-icon name="default-device-headset" large="true"></sw-icon> </div> <p class="payrexx-support__desc"> {{ $tc('payrexx-payment.supportModal.supportDesc') }} </p> <sw-button :disabled="false" variant="primary" :square="false" :block="false" :isLoading="false" link="mailto:support+shopware@payrexx.com"> {{ $tc('payrexx-payment.supportModal.supportButton') }} </sw-button> </div> </sw-container> </sw-modal> <sw-card-view> <sw-system-config ref="systemConfig" sales-channel-switchable inherit @config-changed="onConfigChange" domain="PayrexxPaymentGatewaySW6.settings"> </sw-system-config> </sw-card-view> </template> {% endblock %} </sw-page> {% endblock %}`,{Component:S,Mixin:r}=Shopware;S.register("payrexx-settings",{template:w,mixins:[r.getByName("notification"),r.getByName("sw-inline-snippet")],inject:["PayrexxPaymentSettingsService"],data(){return{config:{},isLoading:!1,isTesting:!1,isSaveSuccessful:!1,isTestSuccessful:!1,instanceNameFilled:!1,apiKeyFilled:!1,showValidationErrors:!1,isSupportModalOpen:!1}},computed:{credentialsMissing:function(){return!this.instanceNameFilled||!this.apiKeyFilled}},methods:{saveFinish(){this.isSaveSuccessful=!1},onSave(){if(this.isLoading=!0,this.credentialsMissing){this.showValidationErrors=!0,this.isLoading=!1;return}this.isSaveSuccessful=!1,this.$refs.systemConfig.saveAll().then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0}).catch(()=>{this.isLoading=!1})},onTest(){this.isTesting=!0,this.isTestSuccessful=!1;let e={instanceName:this.getConfigValue("instanceName"),apiKey:this.getConfigValue("apiKey"),platform:this.getConfigValue("platform")};this.PayrexxPaymentSettingsService.validateApiCredentials(e).then(t=>{const s=t.credentialsValid;t.error,s?(this.createNotificationSuccess({title:this.$tc("payrexx-payment.settingsForm.messages.titleSuccess"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestSuccess")}),this.isTestSuccessful=!0):this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.messages.titleError"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestError")}),this.isTesting=!1}).catch(t=>{this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.messages.titleError"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestErrorGeneral")}),this.isTesting=!1})},onConfigChange(e){this.config=e,this.checkCredentialsFilled(),this.showValidationErrors=!1,dispatchEvent(new CustomEvent("payrexx-config-change",{detail:e}))},getBind(e,t){return t!==this.config&&this.onConfigChange(t),this.showValidationErrors&&(e.name==="PayrexxPaymentGatewaySW6.settings.instanceName"&&!this.instanceNameFilled&&(e.config.error={code:1,detail:this.$tc("payrexx-payment.settingsForm.messages.messageNotBlank")}),e.name==="PayrexxPaymentGatewaySW6.settings.apiKey"&&!this.apiKeyFilled&&(e.config.error={code:1,detail:this.$tc("payrexx-payment.settingsForm.messages.messageNotBlank")})),e},checkCredentialsFilled(){this.instanceNameFilled=!!this.getConfigValue("instanceName"),this.apiKeyFilled=!!this.getConfigValue("apiKey")},getConfigValue(e){const t=this.$refs.systemConfig.actualConfigData.null;return this.$refs.systemConfig.currentSalesChannelId===null?this.config[`PayrexxPaymentGatewaySW6.settings.${e}`]:this.config[`PayrexxPaymentGatewaySW6.settings.${e}`]||t[`PayrexxPaymentGatewaySW6.settings.${e}`]}}});const P={"payrexx-payment":{module:{title:"Payrexx Payments",description:"Payrexx Payments"},settingsForm:{title:"Payrexx Payments",test:"Teste den API-Zugang",save:"Speichern",messages:{messageNotBlank:"Dieses Feld darf nicht leer sein.",titleSuccess:"Erfolg",titleError:"Fehler",messageTestSuccess:"Die API-Zugangsdaten sind korrekt.",messageTestError:"Die API-Zugangsdaten sind falsch.",messageTestErrorGeneral:"Die API-Zugangsdaten konnten nicht verifiziert werden.",messageSaveSuccess:"Die Plugin-Einstellungen wurden gespeichert.",messageSaveError:"Die Plugin-Einstellungen konnten nicht gespeichert werden."},connectButton:{text:{connect:"Mit {platform} verbinden",select:"Wähle eine Platform aus"},messages:{noPlatform:{title:"Plattform fehlt",message:"Bitte wähle eine Plattform aus"},cancelled:{title:"Abgebrochen",message:"Verbinden abgebrochen. Es wurden keine Einstellungen gespeichert"},success:{title:"Erfolg",message:"API Key and Instanz wurden erfolgreich importiert"},error:{title:"Fehler beim Speichern",message:"Konfiguration konnte nicht gespeichert werden: {message}"}}}},supportModal:{supportButton:"Support",title:"Wie können wir Ihnen helfen?",supportDesc:"Kontaktieren Sie unser Support-Team",manualButton:"Dokumentation",manualDesc:"Lesen Sie unsere Integrations Anleitung"}}},v={"payrexx-payment":{module:{title:"Payrexx Payments",description:"Payrexx Payments"},settingsForm:{title:"Payrexx Payments",test:"Teste den API-Zugang",save:"Speichern",messages:{messageNotBlank:"Dieses Feld darf nicht leer sein.",titleSuccess:"Erfolg",titleError:"Fehler",messageTestSuccess:"Die API-Zugangsdaten sind korrekt.",messageTestError:"Die API-Zugangsdaten sind falsch.",messageTestErrorGeneral:"Die API-Zugangsdaten konnten nicht verifiziert werden.",messageSaveSuccess:"Die Plugin-Einstellungen wurden gespeichert.",messageSaveError:"Die Plugin-Einstellungen konnten nicht gespeichert werden."},connectButton:{text:{connect:"Mit {platform} verbinden",select:"Wähle eine Platform aus"},messages:{noPlatform:{title:"Plattform fehlt",message:"Bitte wähle eine Plattform aus"},cancelled:{title:"Abgebrochen",message:"Verbinden abgebrochen. Es wurden keine Einstellungen gespeichert"},success:{title:"Erfolg",message:"API Key and Instanz wurden erfolgreich importiert"},error:{title:"Fehler beim Speichern",message:"Konfiguration konnte nicht gespeichert werden: {message}"}}}},supportModal:{supportButton:"Support",title:"Wie können wir Ihnen helfen?",supportDesc:"Kontaktieren Sie unser Support-Team",manualButton:"Dokumentation",manualDesc:"Lesen Sie unsere Integrations Anleitung"}}},b={"payrexx-payment":{module:{title:"Payrexx Payments",description:"Payrexx Payments"},settingsForm:{title:"Payrexx Payments",test:"Test API-Credentials",save:"Save",messages:{messageNotBlank:"This Field must not be empty.",titleSuccess:"Success",titleError:"Error",messageTestSuccess:"The API credentials are correct.",messageTestError:"The API credentials are wrong.",messageTestErrorGeneral:"The API-Credentials could not be verified.",messageSaveSuccess:"The plugin settings have been saved.",messageSaveError:"The plugin settings could not be saved."},connectButton:{text:{connect:"Mit {platform} verbinden",select:"Wähle eine Platform aus"},messages:{noPlatform:{title:"No platform selected",message:"Please select a platform before connecting"},cancelled:{title:"Cancelled",message:"Connecting attempt cancelled"},success:{title:"Success",message:"API Key and Instance have been updated successfully"},error:{title:"Error Saving",message:"Failed to save configuration: {message}"}}}},supportModal:{supportButton:"Support",title:"How Can We Help You?",supportDesc:"Contact our support team",manualButton:"Manual",manualDesc:"Read our integration manual"}}},{Module:k}=Shopware;k.register("payrexx-payment",{type:"plugin",name:"PayrexxPayment",title:"payrexx-payment.module.title",description:"payrexx-payment.module.description",version:"1.0.0",targetVersion:"1.0.0",icon:"regular-cog",snippets:{"de-DE":P,"de-CH":v,"en-GB":b},routes:{index:{component:"payrexx-settings",path:"index",meta:{parentPath:"sw.settings.index"}}},settingsItem:{name:"payrexx-payment-settings",group:"plugins",to:"payrexx.payment.index",icon:"regular-credit-card",backgroundEnabled:!0}});const{Application:o}=Shopware,c=Shopware.Classes.ApiService;class C extends c{constructor(t,s,n="payrexx_payment"){super(t,s,n)}validateApiCredentials(t){const s=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/validate-api-credentials`,{credentials:t},{headers:s}).then(n=>c.handleResponse(n))}}o.addServiceProvider("PayrexxPaymentSettingsService",e=>{const t=o.getContainer("init");return new C(t.httpClient,e.loginService)});const E=`{% block platform_connect_button %} <div class="sw-field my-custom-button-component"> <sw-button variant="primary" :disabled="isLoading || !isEnabled" @click="onButtonClick"> {% block platform_connect_button_text %} <template v-if="platform"> {{ $tc('payrexx-payment.settingsForm.connectButton.text.connect', {platform: platform}) }} </template> <template v-else> {{ $tc('payrexx-payment.settingsForm.connectButton.text.select') }} </template> {% endblock %} </sw-button> </div> {% endblock %}`,{Component:_,Mixin:F}=Shopware;_.register("platform-connect-button",{template:E,mixins:[F.getByName("notification")],data(){return{isLoading:!1,isEnabled:!1,platform:""}},created(){try{Shopware.Service("systemConfigApiService").getValues("PayrexxPaymentGatewaySW6.settings").then(t=>{t&&t["PayrexxPaymentGatewaySW6.settings.platform"]?(this.platform=t["PayrexxPaymentGatewaySW6.settings.platform"],this.isEnabled=!0):this.isEnabled=!1})}catch{this.isEnabled=!1}window.addEventListener("message",this.handleMessage),window.addEventListener("payrexx-config-change",e=>{e.detail["PayrexxPaymentGatewaySW6.settings.platform"]&&(this.platform=e.detail["PayrexxPaymentGatewaySW6.settings.platform"],this.isEnabled=!0)})},beforeDestroy(){window.removeEventListener("message",this.handleMessage)},methods:{async onButtonClick(){this.isLoading=!0,await this.createPopupWindow()},async createPopupWindow(){const s=window.screenLeft!==void 0?window.screenLeft:window.screenX,n=window.screenTop!==void 0?window.screenTop:window.screenY,l=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:screen.width,p=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:screen.height,m=s+(l-900)/2,g=`width=900,height=900,top=${n+(p-900)/2},left=${m},resizable=no,scrollbars=yes`;if(!this.platform){const u=await Shopware.Service("systemConfigApiService").getValues("PayrexxPaymentGatewaySW6.settings");this.platform=u["PayrexxPaymentGatewaySW6.settings.platform"]}if(!this.platform){this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.connectButton.messages.noPlatform.title"),message:this.$tc("payrexx-payment.settingsForm.connectButton.messages.noPlatform.message")});return}const d=`https://login.${this.platform}?action=connect&plugin_id=24`;let a=window.open(d,"Connect Payrexx",g),i;i=setInterval(()=>{a.closed&&(a=null,this.isLoading&&this.createNotificationWarning({title:this.$tc("payrexx-payment.settingsForm.connectButton.messages.cancelled.title"),message:this.$tc("payrexx-payment.settingsForm.connectButton.messages.cancelled.message")}),this.isLoading=!1,clearInterval(i))},500)},handleMessage(e){if(this.isLoading=!1,!e.data||!e.data.instance)return;const t=e.data;try{this.storePayload(t.instance),this.setFieldValues(t.instance),this.createNotificationSuccess({title:this.$tc("payrexx-payment.settingsForm.connectButton.messages.success.title"),message:this.$tc("payrexx-payment.settingsForm.connectButton.messages.success.message")})}catch(s){this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.connectButton.messages.error.title"),message:this.$tc("payrexx-payment.settingsForm.connectButton.messages.error.message",{message:s.message})})}},storePayload(e){Shopware.Service("systemConfigApiService").saveValues({"PayrexxPaymentGatewaySW6.settings.apiKey":e.apikey,"PayrexxPaymentGatewaySW6.settings.instanceName":e.name,"PayrexxPaymentGatewaySW6.settings.platform":this.platform})},setFieldValues(e){const t=document.getElementById("PayrexxPaymentGatewaySW6.settings.instanceName");t&&(t.value=e.name);const s=document.getElementById("PayrexxPaymentGatewaySW6.settings.apiKey");s&&(s.value=e.apikey)}}});
//# sourceMappingURL=payrexx-payment-gateway-s-w6-DWMell1W.js.map
