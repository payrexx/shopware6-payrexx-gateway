{"version":3,"file":"payrexx-payment-gateway-s-w6-De0LxPGc.js","sources":["../../../app/administration/src/module/payrexx-payment/components/payrexx-payment-settings-icon/payrexx-payment-settings-icon.html.twig","../../../app/administration/src/module/payrexx-payment/components/payrexx-payment-settings-icon/index.js","../../../app/administration/src/module/payrexx-payment/extension/sw-settings-index/sw-settings-index.html.twig","../../../app/administration/src/module/payrexx-payment/extension/sw-settings-index/index.js","../../../app/administration/src/module/payrexx-payment/page/payrexx-settings/payrexx-settings.html.twig","../../../app/administration/src/module/payrexx-payment/page/payrexx-settings/index.js","../../../app/administration/src/module/payrexx-payment/index.js","../../../app/administration/src/api/payrexx-payment-settings.service.js","../../../app/administration/src/app/assets/icons/icons.js","../../../app/administration/src/init/svg-icons.init.js"],"sourcesContent":["{% block payrexx_payment_settings_icon %}\n    <sw-icon name=\"payrexx-p-color\" multicolor></sw-icon>\n{% endblock %}\n","import template from './payrexx-payment-settings-icon.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('payrexx-payment-settings-icon', {\n    template\n});\n","{% block sw_settings_content_card_slot_plugins %}\n    {% parent %}\n\n    <sw-settings-item :label=\"$tc('payrexx-payment.module.title')\"\n                      :to=\"{ name: 'payrexx.payment.index' }\"\n                      :backgroundEnabled=\"false\">\n        <template #icon>\n            <img class=\"sw-settings-index__payrexx-icon\" :src=\"'payrexxpaymentgatewaysw6/administration/plugin.png' | asset\" :alt=\"Payrexx\">\n        </template>\n    </sw-settings-item>\n{% endblock %}\n","import template from './sw-settings-index.html.twig';\nimport './sw-settings.index.scss';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-settings-index', {\n    template\n});\n","{% block payrexx_payment_settings %}\n<sw-page class=\"payrexx-payment\">\n    {% block payrexx_payment_settings_header %}\n    <template slot=\"smart-bar-header\">\n        <h2>\n            {{ $tc('sw-settings.index.title') }}\n            <sw-icon name=\"small-arrow-medium-right\" small></sw-icon>\n            {{ $tc('payrexx-payment.settingsForm.title') }}\n        </h2>\n    </template>\n    {% endblock %}\n    {% block payrexx_payment_actions %}\n    <template #smart-bar-actions>\n        {% block payrexx_payment_settings_actions_feedback %}\n        <sw-button\n            @click=\"isSupportModalOpen = true\"\n            :disabled=\"false\"\n            variant=\"ghost\"\n            :square=\"false\"\n            :block=\"false\"\n            :isLoading=\"false\">\n            {{ $tc('payrexx-payment.supportModal.supportButton') }}\n        </sw-button>\n        {% endblock %}\n        {% block payrexx_payment_settings_actions_test %}\n        <sw-button-process @click=\"onTest\"\n                           :isLoading=\"isTesting\"\n                           :processSuccess=\"isTestSuccessful\"\n                           :disabled=\"credentialsMissing || isLoading\">\n            {{ $tc('payrexx-payment.settingsForm.test') }}\n        </sw-button-process>\n        {% endblock %}\n\n\n        {% block payrexx_payment_settings_actions_save %}\n        <sw-button-process\n            class=\"payrexx_payment_settings_actions__save-action\"\n            :isLoading=\"isLoading\"\n            :processSuccess=\"isSaveSuccessful\"\n            :disabled=\"isLoading || isTesting\"\n            variant=\"primary\"\n            @process-finish=\"saveFinish\"\n            @click=\"onSave\">\n            {{ $tc('payrexx-payment.settingsForm.save') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n    {% block payrexx_payment_settings_content %}\n    <template #content>\n        <sw-modal\n            v-if=\"isSupportModalOpen\"\n            @modal-close=\"isSupportModalOpen = false\"\n            :title=\"$tc('payrexx-payment.supportModal.title')\"\n            class=\"payrexx-support sw-modal--medium\">\n            <sw-container columns=\"1fr 1fr\">\n                <div class=\"payrexx-support__col\">\n                    <div class=\"payrexx-support__icon\">\n                        <sw-icon name=\"default-documentation-file\" large=\"true\"></sw-icon>\n                    </div>\n                    <p class=\"payrexx-support__desc\">\n                        {{ $tc('payrexx-payment.supportModal.manualDesc') }}\n                    </p>\n                    <sw-button\n                        :disabled=\"false\"\n                        variant=\"primary\"\n                        :square=\"false\"\n                        :block=\"false\"\n                        :isLoading=\"false\"\n                        link=\"https://help.payrexx.com/integration/e-commerce/shopware-6\">\n                        {{ $tc('payrexx-payment.supportModal.manualButton') }}\n                    </sw-button>\n                </div>\n                <div class=\"payrexx-support__col\">\n                    <div class=\"payrexx-support__icon\">\n                        <sw-icon name=\"default-device-headset\" large=\"true\"></sw-icon>\n                    </div>\n                    <p class=\"payrexx-support__desc\">\n                        {{ $tc('payrexx-payment.supportModal.supportDesc') }}\n                    </p>\n                    <sw-button\n                        :disabled=\"false\"\n                        variant=\"primary\"\n                        :square=\"false\"\n                        :block=\"false\"\n                        :isLoading=\"false\"\n                        link=\"mailto:support+shopware@payrexx.com\">\n                        {{ $tc('payrexx-payment.supportModal.supportButton') }}\n                    </sw-button>\n                </div>\n            </sw-container>\n        </sw-modal>\n\n        <sw-card-view>\n            <sw-system-config\n                ref=\"systemConfig\"\n                sales-channel-switchable\n                inherit\n                @config-changed=\"onConfigChange\"\n                domain=\"PayrexxPaymentGatewaySW6.settings\">\n            </sw-system-config>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","const {Component, Mixin} = Shopware;\n\nimport template from './payrexx-settings.html.twig';\nimport './style.scss';\n\nComponent.register('payrexx-settings', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    inject: [ 'PayrexxPaymentSettingsService' ],\n\n    data() {\n        return {\n            config: {},\n            isLoading: false,\n            isTesting: false,\n            isSaveSuccessful: false,\n            isTestSuccessful: false,\n            instanceNameFilled: false,\n            apiKeyFilled: false,\n            showValidationErrors: false,\n            isSupportModalOpen: false,\n        }\n    },\n    computed: {\n        credentialsMissing: function () {\n            return !this.instanceNameFilled || !this.apiKeyFilled;\n        }\n    },\n    methods: {\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSave() {\n            this.isLoading = true;\n            if (this.credentialsMissing) {\n                this.showValidationErrors = true;\n                this.isLoading = false;\n                return;\n            }\n\n            this.isSaveSuccessful = false;\n            this.$refs.systemConfig.saveAll().then(() => {\n                this.isLoading = false;\n                this.isSaveSuccessful = true;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onTest() {\n            this.isTesting = true;\n            this.isTestSuccessful = false;\n\n            let credentials = {\n                instanceName: this.getConfigValue('instanceName'),\n                apiKey: this.getConfigValue('apiKey'),\n                platform: this.getConfigValue('platform'),\n            };\n\n\n            this.PayrexxPaymentSettingsService.validateApiCredentials(credentials).then((response) => {\n                const credentialsValid = response.credentialsValid;\n                const error = response.error;\n\n                if (credentialsValid) {\n                    this.createNotificationSuccess({\n                        title: this.$tc('payrexx-payment.settingsForm.messages.titleSuccess'),\n                        message: this.$tc('payrexx-payment.settingsForm.messages.messageTestSuccess')\n                    });\n                    this.isTestSuccessful = true;\n                } else {\n                    this.createNotificationError({\n                        title: this.$tc('payrexx-payment.settingsForm.messages.titleError'),\n                        message: this.$tc('payrexx-payment.settingsForm.messages.messageTestError')\n                    });\n                }\n                this.isTesting = false;\n            }).catch((errorResponse) => {\n                this.createNotificationError({\n                    title: this.$tc('payrexx-payment.settingsForm.messages.titleError'),\n                    message: this.$tc('payrexx-payment.settingsForm.messages.messageTestErrorGeneral')\n                });\n                this.isTesting = false;\n            });\n        },\n\n        onConfigChange(config) {\n            this.config = config;\n\n            this.checkCredentialsFilled();\n\n            this.showValidationErrors = false;\n        },\n\n        getBind(element, config) {\n            if (config !== this.config) {\n                this.onConfigChange(config);\n            }\n\n            if (this.showValidationErrors) {\n                if (element.name === 'PayrexxPaymentGatewaySW6.settings.instanceName' && !this.instanceNameFilled) {\n                    element.config.error = {\n                        code: 1,\n                        detail: this.$tc('payrexx-payment.settingsForm.messages.messageNotBlank')\n                    };\n                }\n                if (element.name === 'PayrexxPaymentGatewaySW6.settings.apiKey' && !this.apiKeyFilled) {\n                    element.config.error = {\n                        code: 1,\n                        detail: this.$tc('payrexx-payment.settingsForm.messages.messageNotBlank')\n                    };\n                }\n            }\n\n            return element;\n        },\n\n\n        checkCredentialsFilled() {\n            this.instanceNameFilled = !!this.getConfigValue('instanceName');\n            this.apiKeyFilled = !!this.getConfigValue('apiKey');\n        },\n        getConfigValue(field) {\n            const defaultConfig = this.$refs.systemConfig.actualConfigData.null;\n            const salesChannelId = this.$refs.systemConfig.currentSalesChannelId;\n\n            if (salesChannelId === null) {\n                return this.config[`PayrexxPaymentGatewaySW6.settings.${field}`];\n            }\n            return this.config[`PayrexxPaymentGatewaySW6.settings.${field}`]\n                || defaultConfig[`PayrexxPaymentGatewaySW6.settings.${field}`];\n        },\n    }\n});\n","import './components/payrexx-payment-settings-icon';\nimport './extension/sw-settings-index';\nimport './page/payrexx-settings';\n\nimport deDE from './snippet/de_DE.json';\nimport deCH from './snippet/de_CH.json';\nimport enGB from './snippet/en_GB.json';\n\n\nconst { Module } = Shopware;\n\nModule.register('payrexx-payment', {\n    type: 'plugin',\n    name: 'PayrexxPayment',\n    title: 'payrexx-payment.module.title',\n    description: 'payrexx-payment.module.description',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    icon: 'regular-cog',\n\n    snippets: {\n        'de-DE': deDE,\n        'de-CH': deCH,\n        'en-GB': enGB\n    },\n\n    routes: {\n        index: {\n            component: 'payrexx-settings',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index'\n            }\n        }\n    },\n    settingsItem: {\n        name: 'payrexx-payment-settings',\n        group: 'plugins',\n        to: 'payrexx.payment.index',\n        // iconComponent: 'payrexx-payment-settings-icon',\n        icon: 'regular-credit-card',\n        backgroundEnabled: true,\n    }\n});\n","const { Application } = Shopware;\nconst ApiService = Shopware.Classes.ApiService;\n\nclass PayrexxPaymentSettingsService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'payrexx_payment') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    validateApiCredentials(credentials) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/validate-api-credentials`,\n                {\n                    credentials: credentials,\n                },\n                {\n                    headers: headers\n                }\n            )\n            .then((response) => {\n            return ApiService.handleResponse(response);\n    });\n    }\n\n}\n\nApplication.addServiceProvider('PayrexxPaymentSettingsService', (container) => {\n    const initContainer = Application.getContainer('init');\n\n    return new PayrexxPaymentSettingsService(initContainer.httpClient, container.loginService);\n});\n\n","export default (() => {\n    const context = require.context('./svg', false, /svg$/);\n\n    return context.keys().reduce((accumulator, item) => {\n        const componentName = item.split('.')[1].split('/')[1];\n        const component = {\n            name: componentName,\n            functional: true,\n            render(createElement, elementContext) {\n                const data = elementContext.data;\n\n                return createElement('span', {\n                    class: [data.staticClass, data.class],\n                    style: data.style,\n                    attrs: data.attrs,\n                    on: data.on,\n                    domProps: {\n                        innerHTML: context(item)\n                    }\n                });\n            }\n        };\n\n        accumulator.push(component);\n        return accumulator;\n    }, []);\n})();\n","import iconComponents from '../app/assets/icons/icons';\n\nconst { Component } = Shopware;\n\nexport default (() => {\n    return iconComponents.map((component) => {\n        return Component.register(component.name, component);\n    });\n})();\n"],"names":["template$2","Component","template","template$1","Mixin","credentials","response","credentialsValid","errorResponse","config","element","field","defaultConfig","Module","deDE","deCH","enGB","Application","ApiService","PayrexxPaymentSettingsService","httpClient","loginService","apiEndpoint","headers","container","initContainer","iconComponents","context","accumulator","item","component","createElement","elementContext","data"],"mappings":"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"}